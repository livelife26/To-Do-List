{"version":3,"sources":["helpers/classname.js","todo-list/containers/TodoList/TodoList.jsx","todo-list/containers/App/App.js","entry.js"],"names":["cn","withNaming","e","m","todolistClassName","listItemClassName","TodoList","useState","items","itemId","todoList","setTodoList","className","map","listItem","key","id","type","checked","isChecked","onChange","item","placeholder","value","event","target","onClick","filter","emptyItem","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sNAEaA,EAAKC,qBAAW,CAAEC,EAAG,KAAMC,EAAG,OCIrCC,G,MAAoBJ,EAAG,aACvBK,EAAoBL,EAAG,iBAEhBM,EAAW,WAAO,IAAD,EACIC,mBAAS,CACvCC,MAAO,GACPC,OAAQ,IAHkB,mBACrBC,EADqB,KACXC,EADW,KAqB5B,OACE,yBAAKC,UAAU,eACb,yBAAKA,UAAWR,EAAkB,WAChC,yBAAKQ,UAAWR,EAAkB,UAChC,wBAAIQ,UAAWR,EAAkB,kBAAjC,UAEF,yBAAKQ,UAAWR,EAAkB,SAC/BM,EAASF,MAAMK,KAAI,SAACC,GAwDnB,OACE,yBACEC,IAAKD,EAASE,GACdJ,UAAS,UAAKR,EACZ,QADO,YAEJC,MAEL,2BAAOO,UAAWP,EAAkB,UAClC,2BACEO,UAAWP,EAAkB,YAC7BY,KAAK,WACLC,QAASJ,EAASK,UAClBC,SAnEY,WAClBT,GAAY,SAACD,GACX,IAAMF,EAAQE,EAASF,MAAMK,KAAI,SAACQ,GAChC,OAAIA,EAAKL,KAAOF,EAASE,GAChB,eACFK,EADL,CAEEF,WAAYE,EAAKF,YAIdE,KAGT,OAAO,eACFX,EADL,CAEEF,gBAsDA,0BAAMI,UAAWP,EAAkB,gBAErC,2BACEiB,YAAY,sBACZV,UACEE,EAASK,WAAaL,EAASS,MAC3BlB,EAAkB,OAAQ,CAAEa,SAAS,IACrCb,EAAkB,QAExBY,KAAK,OACLM,MAAOT,EAASS,MAChBH,SA5Da,SAACI,GAAW,IACrBD,EAAUC,EAAMC,OAAhBF,MAERZ,GAAY,SAACD,GACX,IAAMF,EAAQE,EAASF,MAAMK,KAAI,SAACQ,GAChC,OAAIA,EAAKL,KAAOF,EAASE,GAChB,eACFK,EADL,CAEEE,UAIGF,KAGT,OAAO,eACFX,EADL,CAEEF,gBA6CF,4BACEI,UAAWP,EAAkB,UAC7BqB,QA1Ce,WACnBf,GAAY,SAACD,GACX,IAAMF,EAAQE,EAASF,MAAMmB,QAC3B,SAACN,GAAD,OAAUA,EAAKL,KAAOF,EAASE,MAGjC,OAAO,eACFN,EADL,CAEEF,qBAwCV,yBAAKI,UAAWR,EAAkB,QAChC,4BACEQ,UAAWR,EAAkB,cAC7BsB,QApHQ,WAChBf,GAAY,SAACD,GACX,IAAMkB,EAAY,CAChBZ,GAAIN,EAASD,OACbc,MAAO,GACPJ,WAAW,GAGb,MAAO,CACLX,MAAM,GAAD,mBAAME,EAASF,OAAf,CAAsBoB,IAC3BnB,OAAQC,EAASD,OAAS,QAwGxB,gBC9HGoB,EAAM,WACjB,OAAO,kBAAC,EAAD,OCCTC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.1b7b3f3f.chunk.js","sourcesContent":["import { withNaming } from '@bem-react/classname';\n\nexport const cn = withNaming({ e: '__', m: '--' });","import React, { useState } from \"react\";\n\nimport { cn } from \"../../../helpers/classname\";\n\nimport \"./style.scss\";\n\nconst todolistClassName = cn(\"todolist\");\nconst listItemClassName = cn(\"todolist-item\");\n\nexport const TodoList = () => {\n  const [todoList, setTodoList] = useState({\n    items: [],\n    itemId: 0,\n  });\n\n  const handleAdd = () => {\n    setTodoList((todoList) => {\n      const emptyItem = {\n        id: todoList.itemId,\n        value: \"\",\n        isChecked: false,\n      };\n\n      return {\n        items: [...todoList.items, emptyItem],\n        itemId: todoList.itemId + 1,\n      };\n    });\n  };\n\n  return (\n    <div className=\"app__layout\">\n      <div className={todolistClassName(\"layout\")}>\n        <div className={todolistClassName(\"title\")}>\n          <h1 className={todolistClassName(\"title-content\")}>To do</h1>\n        </div>\n        <div className={todolistClassName(\"list\")}>\n          {todoList.items.map((listItem) => {\n            const handleCheck = () => {\n              setTodoList((todoList) => {\n                const items = todoList.items.map((item) => {\n                  if (item.id === listItem.id) {\n                    return {\n                      ...item,\n                      isChecked: !item.isChecked,\n                    };\n                  }\n\n                  return item;\n                });\n\n                return {\n                  ...todoList,\n                  items,\n                };\n              });\n            };\n\n            const handleEdit = (event) => {\n              const { value } = event.target;\n\n              setTodoList((todoList) => {\n                const items = todoList.items.map((item) => {\n                  if (item.id === listItem.id) {\n                    return {\n                      ...item,\n                      value,\n                    };\n                  }\n\n                  return item;\n                });\n\n                return {\n                  ...todoList,\n                  items,\n                };\n              });\n            };\n\n            const handleDelete = () => {\n              setTodoList((todoList) => {\n                const items = todoList.items.filter(\n                  (item) => item.id !== listItem.id\n                );\n\n                return {\n                  ...todoList,\n                  items,\n                };\n              });\n            };\n\n            return (\n              <div\n                key={listItem.id}\n                className={`${todolistClassName(\n                  \"item\"\n                )} ${listItemClassName()}`}\n              >\n                <label className={listItemClassName(\"label\")}>\n                  <input\n                    className={listItemClassName(\"checkbox\")}\n                    type=\"checkbox\"\n                    checked={listItem.isChecked}\n                    onChange={handleCheck}\n                  />\n                  <span className={listItemClassName(\"checkmark\")}></span>\n                </label>\n                <input\n                  placeholder=\"Type your new task!\"\n                  className={\n                    listItem.isChecked && listItem.value\n                      ? listItemClassName(\"form\", { checked: true })\n                      : listItemClassName(\"form\")\n                  }\n                  type=\"text\"\n                  value={listItem.value}\n                  onChange={handleEdit}\n                />\n                <button\n                  className={listItemClassName(\"remove\")}\n                  onClick={handleDelete}\n                ></button>\n              </div>\n            );\n          })}\n        </div>\n        <div className={todolistClassName(\"add\")}>\n          <button\n            className={todolistClassName(\"add-button\")}\n            onClick={handleAdd}\n          >\n            New task\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { TodoList } from \"../TodoList\";\n\nexport const App = () => {\n  return <TodoList />;\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './todo-list/containers/App/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}