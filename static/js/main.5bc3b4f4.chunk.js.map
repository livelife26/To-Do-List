{"version":3,"sources":["app/helpers/classname.js","app/components/Checkbox/Checkbox.jsx","app/containers/TodoList/TodoList.jsx","app/containers/App/App.jsx","entry.js"],"names":["cn","withNaming","e","m","checkboxClassName","Checkbox","props","className","type","todolistClassName","listItemClassName","TodoList","useState","items","itemId","todoList","setTodoList","map","listItem","key","id","checked","isChecked","onChange","item","placeholder","value","event","target","onClick","filter","emptyItem","appClassName","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8NAEaA,EAAKC,qBAAW,CAAEC,EAAG,KAAMC,EAAG,O,qBCIrCC,G,MAAoBJ,EAAG,aAEhBK,EAAW,SAACC,GACvB,OACE,2BAAOC,UAAWH,EAAkB,UAClC,yCACEG,UAAWH,EAAkB,OAC7BI,KAAK,YACDF,IAEN,0BAAMC,UAAWH,EAAkB,YCRnCK,G,MAAoBT,EAAG,aACvBU,EAAoBV,EAAG,iBAEhBW,EAAW,WAAO,IAAD,EACIC,mBAAS,CACvCC,MAAO,GACPC,OAAQ,IAHkB,mBACrBC,EADqB,KACXC,EADW,KAqB5B,OACE,yBAAKT,UAAWE,EAAkB,WAChC,wBAAIF,UAAWE,EAAkB,iBAAjC,SACA,yBAAKF,UAAWE,EAAkB,gBAChC,yBAAKF,UAAWE,EAAkB,SAC/BM,EAASF,MAAMI,KAAI,SAACC,GAwDnB,OACE,yBAAKC,IAAKD,EAASE,GAAIb,UAAWG,EAAkB,WAClD,kBAAC,EAAD,CAAUW,QAASH,EAASI,UAAWC,SAzDvB,WAClBP,GAAY,SAACD,GACX,IAAMF,EAAQE,EAASF,MAAMI,KAAI,SAACO,GAChC,OAAIA,EAAKJ,KAAOF,EAASE,GAChB,eACFI,EADL,CAEEF,WAAYE,EAAKF,YAIdE,KAGT,OAAO,eACFT,EADL,CAEEF,gBA2CF,2BACEY,YAAY,sBACZlB,UAAWG,EAAkB,YAAa,CACxCW,QAASH,EAASI,YAEpBd,KAAK,OACLkB,MAAOR,EAASQ,MAChBH,SA7Ca,SAACI,GAAW,IACrBD,EAAUC,EAAMC,OAAhBF,MAERV,GAAY,SAACD,GACX,IAAMF,EAAQE,EAASF,MAAMI,KAAI,SAACO,GAChC,OAAIA,EAAKJ,KAAOF,EAASE,GAChB,eACFI,EADL,CAEEE,UAIGF,KAGT,OAAO,eACFT,EADL,CAEEF,gBA8BF,4BACEN,UAAWG,EAAkB,UAC7BmB,QA3Be,WACnBb,GAAY,SAACD,GACX,IAAMF,EAAQE,EAASF,MAAMiB,QAC3B,SAACN,GAAD,OAAUA,EAAKJ,KAAOF,EAASE,MAGjC,OAAO,eACFL,EADL,CAEEF,qBAyBV,yBAAKN,UAAWE,EAAkB,sBAChC,4BACEF,UAAWE,EAAkB,cAC7BoB,QAnGQ,WAChBb,GAAY,SAACD,GACX,IAAMgB,EAAY,CAChBX,GAAIL,EAASD,OACbQ,WAAW,EACXI,MAAO,IAGT,MAAO,CACLb,MAAM,GAAD,mBAAME,EAASF,OAAf,CAAsBkB,IAC3BjB,OAAQC,EAASD,OAAS,QAuFxB,gBC1GJkB,G,MAAehC,EAAG,QAEXiC,EAAM,WACjB,OACE,yBAAK1B,UAAWyB,EAAa,WAC3B,kBAAC,EAAD,QCRNE,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.5bc3b4f4.chunk.js","sourcesContent":["import { withNaming } from '@bem-react/classname';\n\nexport const cn = withNaming({ e: '__', m: '--' });","import React from \"react\";\n\nimport { cn } from \"../../helpers/classname\";\n\nimport \"./Checkbox.scss\";\n\nconst checkboxClassName = cn(\"checkbox\");\n\nexport const Checkbox = (props) => {\n  return (\n    <label className={checkboxClassName(\"label\")}>\n      <input\n        className={checkboxClassName(\"box\")}\n        type=\"checkbox\"\n        {...props}\n      />\n      <span className={checkboxClassName(\"mark\")}></span>\n    </label>\n  );\n};\n","import React, { useState } from \"react\";\n\nimport { Checkbox } from '../../components/Checkbox';\n\nimport { cn } from \"../../helpers/classname\";\n\nimport \"./TodoList.scss\";\n\nconst todolistClassName = cn(\"todolist\");\nconst listItemClassName = cn(\"todolist-item\");\n\nexport const TodoList = () => {\n  const [todoList, setTodoList] = useState({\n    items: [],\n    itemId: 0,\n  });\n\n  const handleAdd = () => {\n    setTodoList((todoList) => {\n      const emptyItem = {\n        id: todoList.itemId,\n        isChecked: false,\n        value: \"\",\n      };\n\n      return {\n        items: [...todoList.items, emptyItem],\n        itemId: todoList.itemId + 1,\n      };\n    });\n  };\n\n  return (\n    <div className={todolistClassName(\"layout\")}>\n      <h1 className={todolistClassName(\"title-layout\")}>To do</h1>\n      <div className={todolistClassName(\"list-layout\")}>\n        <div className={todolistClassName(\"list\")}>\n          {todoList.items.map((listItem) => {\n            const handleCheck = () => {\n              setTodoList((todoList) => {\n                const items = todoList.items.map((item) => {\n                  if (item.id === listItem.id) {\n                    return {\n                      ...item,\n                      isChecked: !item.isChecked,\n                    };\n                  }\n\n                  return item;\n                });\n\n                return {\n                  ...todoList,\n                  items,\n                };\n              });\n            };\n\n            const handleEdit = (event) => {\n              const { value } = event.target;\n\n              setTodoList((todoList) => {\n                const items = todoList.items.map((item) => {\n                  if (item.id === listItem.id) {\n                    return {\n                      ...item,\n                      value,\n                    };\n                  }\n\n                  return item;\n                });\n\n                return {\n                  ...todoList,\n                  items,\n                };\n              });\n            };\n\n            const handleDelete = () => {\n              setTodoList((todoList) => {\n                const items = todoList.items.filter(\n                  (item) => item.id !== listItem.id\n                );\n\n                return {\n                  ...todoList,\n                  items,\n                };\n              });\n            };\n\n            return (\n              <div key={listItem.id} className={listItemClassName(\"layout\")}>\n                <Checkbox checked={listItem.isChecked} onChange={handleCheck} />\n                <input\n                  placeholder=\"Type your new task!\"\n                  className={listItemClassName(\"textfield\", {\n                    checked: listItem.isChecked,\n                  })}\n                  type=\"text\"\n                  value={listItem.value}\n                  onChange={handleEdit}\n                />\n                <button\n                  className={listItemClassName(\"delete\")}\n                  onClick={handleDelete}\n                ></button>\n              </div>\n            );\n          })}\n        </div>\n        <div className={todolistClassName(\"add-button-layout\")}>\n          <button\n            className={todolistClassName(\"add-button\")}\n            onClick={handleAdd}\n          >\n            New task\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\n\nimport { cn } from '../../helpers/classname';\n\nimport { TodoList } from \"../TodoList\";\n\nimport './App.scss';\n\nconst appClassName = cn('app');\n\nexport const App = () => {\n  return (\n    <div className={appClassName(\"layout\")}>\n      <TodoList />\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { App } from './app/containers/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}